{"version":3,"sources":["components/Dashboard/listItems/listItems.js","Store/reducer.js","Store/types.js","Store/index.js","components/Popup/Popup.js","components/Popup/index.js","components/Title/Title.js","components/Sale/Sales.js","screens/ScreenTitle.js","screens/CarSellDupe.js","components/Dashboard/Dashboard.js","components/Dashboard/index.js","components/index.js","serviceWorker.js","index.js"],"names":["ListItem","button","ListItemIcon","ListItemText","primary","state","type","payload","dictionary","isOpen","popupTitle","popupText","error","default","initialState","StoreContext","createContext","Store","children","useReducer","reducer","dispatch","Provider","value","Popup","handleAccept","useContext","handleDecline","useCallback","useMemo","DialogWrapper","Dialog","Title","Text","ButtonWrapper","AcceptButton","onClick","variant","color","DeclineButton","styled","props","Button","Typography","component","gutterBottom","useStyles","makeStyles","theme","dateInput","marginRight","spacing","ClearButton","Sales","useState","sales","setSales","isAllowed","setIsAllowed","moment","selectedDate","handleDateChange","classes","calculateSalesCheck","calculatedSalesCheck","sum2h","sum30h","forEach","sale","diff","date","calculateIsAllowed","check","useEffect","localStorage","carSell","JSON","parse","setItem","stringify","TableBody","map","formattedDate","id","TableRow","key","TableCell","handleClearAccept","Box","DateTimePicker","className","onChange","e","preventDefault","updatedIsAllowed","salesCheck","dispatchWarningPopup","updatedSales","format","Date","getUTCMilliseconds","sort","a","b","addNewSale","Table","size","TableHead","ScreenTitle","CarSellDupe","Grid","container","item","xs","Paper","paper","Copyright","align","Link","getFullYear","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","Dashboard","React","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","Divider","List","mainListItems","Container","maxWidth","pt","App","utils","MomentUtils","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3584b0e3.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\nexport default (\n    <div>\n        <ListItem button>\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Car Sell Dupe\" />\n        </ListItem>\n    </div>\n);\n","import {\n  openPopup,\n  closePopup,\n  setError,\n  updateAnyState\n} from './types';\n\nexport default (state, { type, payload }) => {\n  const dictionary = {\n    [openPopup]: () => ({ ...state, isOpen: true, popupTitle: payload.popupTitle, popupText: payload.popupText }),\n    [closePopup]: () => ({ ...state, isOpen: false, popupTitle: '', popupText: '' }),\n    [setError]: () => ({ ...state, error: payload }),\n    [updateAnyState]: () => ({ ...state, ...payload }),\n    default: () => state\n  }\n\n  return dictionary[type] ? dictionary[type]() : dictionary.default();\n};\n","export const openPopup = 'POPUP@OPEN_POPUP';\nexport const closePopup = 'POPUP@CLOSE_POPUP';\n\nexport const updateAnyState = 'STATE@UPDATE_ANY_STATE';\n\nexport const setError = 'ERROR/SET_ERROR';","import React, { createContext, useReducer } from \"react\";\nimport reducer from './reducer';\n\nconst initialState = {\n    isOpen: false,\n    popupTitle: '',\n    popupText: '',\n    error: null,\n};\n\nconst Store = ({children}) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <StoreContext.Provider value={[state, dispatch]}>\n            { children }\n        </StoreContext.Provider>\n    )\n};\n\nexport const StoreContext = createContext(initialState);\nexport default Store;","import React, { useContext, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { StoreContext } from '../../Store'\nimport { closePopup } from '../../Store/types';\nimport Button from '@material-ui/core/Button';\n\nconst Popup = ({handleAccept = () => false}) => {\n    const [state, dispatch] = useContext(StoreContext);\n    const {isOpen, popupTitle, popupText} = state;\n\n    const handleDecline = useCallback(() => {\n        dispatch({type: closePopup})\n    }, [dispatch])\n\n    return useMemo(() =>\n        <DialogWrapper isOpen={isOpen}>\n            <Dialog>\n                <Title>{popupTitle}</Title>\n                <Text>{popupText}</Text>\n                <ButtonWrapper>\n                    <AcceptButton onClick={handleAccept} variant=\"contained\" color=\"primary\">Yes</AcceptButton>\n                    <DeclineButton onClick={handleDecline} variant=\"contained\" color=\"secondary\">No</DeclineButton>\n                </ButtonWrapper>\n            </Dialog>\n        </DialogWrapper>, [isOpen, popupTitle, popupText, handleAccept, handleDecline]\n    )\n}\n\nexport default Popup;\n\nconst DialogWrapper = styled('div')`\n  width: 100vw;\n  height: 100vh;\n  z-index: 9999;\n  top: 0;\n  left: 0;\n  background-color: rgba(0,0,0,.5);\n  position: absolute;\n  overflow: hidden;\n  display: ${props => props.isOpen ? 'block' : 'none'};\n`\n\nconst Dialog = styled('div')`\n  width: 500px;\n  border: 1px solid black;\n  background-color: #eee;\n  position: fixed;\n  display: block;\n  top: 20vh;\n  left: 35vw;\n  border-radius: 6px;\n`\n\nconst Title = styled('div')`\n  color: red;\n  width: 100%;\n  font-size: 22px;\n  font-family: 'Roboto';\n  border-bottom: 1px solid #eee;\n  padding: 8px 12px;\n  margin-bottom: 20px;\n`\n\nconst Text = styled(Title)`\n  color: black;\n  font-size: 16px;\n  padding: 50px 12px;\n  text-align: center;\n`\n\nconst ButtonWrapper = styled('div')`\n  text-align: end;\n  padding: 15px;\n`\n\nconst AcceptButton = styled(Button)`\n  margin-right: 15px;\n  width: 100px;\n`\n\nconst DeclineButton = styled(AcceptButton)``\n","import Popup from './Popup';\n\nexport default Popup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n            {props.children}\n        </Typography>\n    );\n}\n\nTitle.propTypes = {\n    children: PropTypes.node,\n};\n","import React, { useState, useEffect, useMemo, useContext, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Popup from '../Popup';\nimport { StoreContext } from '../../Store'\nimport { openPopup, closePopup } from '../../Store/types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Title from '../Title/Title';\nimport moment from 'moment';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Box from \"@material-ui/core/Box\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    dateInput: {\n        marginRight: theme.spacing(3)\n    }\n}));\n\nconst ClearButton = styled(Button)`\n    margin-left: 16px;\n`\n\nexport default function Sales() {\n    const [, dispatch] = useContext(StoreContext);\n    const [sales, setSales] = useState([]);\n    const [isAllowed, setIsAllowed] = useState(true);\n    const [selectedDate, handleDateChange] = useState(moment());\n    const classes = useStyles();\n\n    const calculateSalesCheck = useCallback(() => {\n        const calculatedSalesCheck = {sum2h: 0, sum30h: 0};\n        sales.forEach(sale => {\n            const diff = selectedDate.diff(sale.date, 'm');\n            if (diff < 120) calculatedSalesCheck.sum2h++;\n            if (diff < 30 * 60) calculatedSalesCheck.sum30h++;\n        });\n        return calculatedSalesCheck;\n    }, [sales, selectedDate]);\n\n    const calculateIsAllowed = useCallback(() => {\n        const check = calculateSalesCheck();\n        return !(check.sum2h >= 2 || check.sum30h >= 7);\n    }, [calculateSalesCheck]);\n\n    /* On Mount. */\n    useEffect(() => {\n        localStorage.carSell && setSales(JSON.parse(localStorage.carSell));\n    }, []); // eslint-disable-line\n\n    useEffect(() => {\n        localStorage.setItem('carSell', JSON.stringify(sales));\n        setIsAllowed(calculateIsAllowed());\n    }, [sales, calculateIsAllowed]);\n\n    const addNewSale = () => {\n        const updatedSales = [\n            ...sales,\n            {\n                formattedDate: selectedDate.format('hh:mm:ss DD.MM'),\n                id: new Date().getUTCMilliseconds(),\n                date: selectedDate\n            }\n        ].sort(((a, b) => b.date - a.date));\n        setSales(updatedSales)\n    }\n\n    const dispatchWarningPopup = () => {\n        const salesCheck = calculateSalesCheck();\n        return dispatch({\n            type: openPopup,\n            payload: {\n                popupText: `Are you sure you wanna sell car?\n                    You has sold ${salesCheck.sum2h} cars in last two hours\n                    and ${salesCheck.sum30h} cars in last 30 hours so you should do\n                    it only if you sure u have first sell level`,\n                popupTitle: 'Are you sure you wanna sell car while you have cd?'\n            }\n        })\n    }\n\n    const dispatchSalesClearPopup = () => {\n        dispatch({\n            type: openPopup,\n            payload: {\n                popupTitle: 'Clear sell history',\n                popupText: 'Are you sure you want delete your history'\n            }\n        })\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        const updatedIsAllowed = calculateIsAllowed();\n        setIsAllowed(updatedIsAllowed);\n        if (!updatedIsAllowed) return dispatchWarningPopup();\n        addNewSale();\n    }\n\n    const handleClearClick = (e) => {\n        e.preventDefault();\n        dispatchSalesClearPopup();\n        setIsAllowed(true);\n    }\n\n    const Sales = useMemo(() => (\n        <TableBody>\n            {sales.map(({formattedDate, id}) => (\n                <TableRow key={id}>\n                    <TableCell>{formattedDate}</TableCell>\n                </TableRow>\n            ))}\n        </TableBody>\n    ), [sales])\n\n    const handleClearAccept = useCallback(() => {\n        setSales([])\n        dispatch({type: closePopup})\n    }, [dispatch])\n\n    return (\n        <>\n            <Popup handleAccept={handleClearAccept}/>\n            <Title>Recent Sales.</Title>\n            <Typography>\n                {isAllowed ? 'You can sell now.' : 'You cannot sell now.'}\n            </Typography>\n            <Box>\n                <DateTimePicker className={classes.dateInput} value={selectedDate} onChange={handleDateChange}/>\n                <Button onClick={handleClick} variant=\"contained\" color=\"primary\">Sell</Button>\n                <ClearButton onClick={handleClearClick} variant=\"contained\" color=\"secondary\">Clear</ClearButton>\n            </Box>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Date</TableCell>\n                    </TableRow>\n                </TableHead>\n                {Sales}\n            </Table>\n        </>\n    );\n}\n","import Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport default function ScreenTitle(props) {\n    return (\n        <Typography component=\"h1\" variant=\"h3\" color=\"primary\" gutterBottom>\n            {props.children}\n        </Typography>\n    );\n}\n\nScreenTitle.propTypes = {\n    children: PropTypes.node,\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Sales from \"../components/Sale/Sales\";\nimport ScreenTitle from \"./ScreenTitle\";\n\nexport default function CarSellDupe(props) {\n    return (\n        <>\n            <ScreenTitle>Car Sell Dupe</ScreenTitle>\n            <Grid container spacing={3}>\n                {/* Recent Orders */}\n                <Grid item xs={12}>\n                    <Paper className={props.classes.paper}>\n                        <Sales />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport mainListItems from './listItems/listItems';\nimport CarSellDupe from \"../../screens/CarSellDupe\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\">\n                GTA Glitch Tracker\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: 0,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        GTA Glitch Tracker\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>{mainListItems}</List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <CarSellDupe classes={classes} />\n                    <Box pt={4}>\n                        <Copyright />\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n}\n","import Dashboard from './Dashboard';\n\nexport default Dashboard;","import React from 'react';\nimport Dashboard from \"./Dashboard\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\nfunction App() {\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n            <Dashboard/>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport Store from './Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Store>\n      <App />\n    </Store>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}